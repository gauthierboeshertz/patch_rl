Sender: LSF System <lsfadmin@eu-g3-019>
Subject: Job 234528393: <python3 -m scripts.train_patch_contrastive> in cluster <euler> Exited

Job <python3 -m scripts.train_patch_contrastive> was submitted from host <eu-login-31> by user <gboeshertz> in cluster <euler> at Sat Oct 29 10:27:02 2022
Job was executed on host(s) <5*eu-g3-019>, in queue <gpu.24h>, as user <gboeshertz> in cluster <euler> at Sat Oct 29 10:27:30 2022
</cluster/home/gboeshertz> was used as the home directory.
</cluster/home/gboeshertz/patch_rl> was used as the working directory.
Started at Sat Oct 29 10:27:30 2022
Terminated at Sat Oct 29 11:04:44 2022
Results reported at Sat Oct 29 11:04:44 2022

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python3 -m scripts.train_patch_contrastive
------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with exit code 130.

Resource usage summary:

    CPU time :                                   2523.88 sec.
    Max Memory :                                 21683 MB
    Average Memory :                             16993.99 MB
    Total Requested Memory :                     50000.00 MB
    Delta Memory :                               28317.00 MB
    Max Swap :                                   -
    Max Processes :                              5
    Max Threads :                                14
    Run time :                                   2239 sec.
    Turnaround time :                            2262 sec.

The output (if any) follows:

Training with config: {'model': {'augmentations': ['affine', 'blur'], 'target_augmentations': ['intensity'], 'val_augmentations': 'none', 'aug_prob': 0.5, 'lr': 0.0001, 'target_tau': 0, 'encoder_model_name': 'conv2d', 'encoder_dict': {'in_channels': 9, 'channels': [32, 64, 64], 'kernel_sizes': [3, 3, 3]}, 'dynamics_dict': {'num_heads': 2, 'mlp_dim': 128, 'num_attention_layers': 2, 'action_dim': -1, 'in_features': -1, 'num_patches': -1}, 'device': 'cpu'}, 'env': {'num_transitions': 50000, 'num_sprites': 2, 'all_sprite_mover': True, 'random_init_places': False}, 'train_loop': {'batch_size': 64, 'num_epochs': 50, 'num_workers': 2}}
The encoder ouputs 16 patches
The encoder ouputs 64 features per patch
Traceback (most recent call last):
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/cluster/home/gboeshertz/patch_rl/scripts/train_patch_contrastive.py", line 96, in <module>
    main()
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/cluster/home/gboeshertz/patch_rl/scripts/train_patch_contrastive.py", line 90, in main
    train(model,train_dataloader,val_dataloader,config["train_loop"]["num_epochs"])
  File "/cluster/home/gboeshertz/patch_rl/scripts/train_patch_contrastive.py", line 57, in train
    spr_val_loss = val_epoch(model,val_dataloader)         
  File "/cluster/home/gboeshertz/patch_rl/scripts/train_patch_contrastive.py", line 43, in val_epoch
    for _, batch in enumerate(dataloader):
  File "/cluster/home/gboeshertz/patch_rl/src/patch_contrastive_model.py", line 122, in process_recursive_batch
    target_patches.append(self.target_patchmaker(target_obs[:,i]))
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/cluster/home/gboeshertz/patch_rl/src/patch_contrastive_model.py", line 77, in transform
    
  File "/cluster/home/gboeshertz/patch_rl/src/patch_contrastive_model.py", line 69, in apply_transforms
    
  File "/cluster/home/gboeshertz/patch_rl/src/utils.py", line 180, in maybe_transform
    processed_images = transform(image)
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/kornia/filters/gaussian.py", line 116, in forward
    return gaussian_blur2d(input, self.kernel_size, self.sigma, self.border_type, self.separable)
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/kornia/filters/gaussian.py", line 49, in gaussian_blur2d
    out = filter2d_separable(input, kernel_x[None], kernel_y[None], border_type)
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/kornia/filters/filter.py", line 184, in filter2d_separable
    out_x = filter2d(input, kernel_x.unsqueeze(0), border_type, normalized, padding)
  File "/cluster/home/gboeshertz/miniconda3/envs/urlb/lib/python3.8/site-packages/kornia/filters/filter.py", line 125, in filter2d
    output = F.conv2d(input, tmp_kernel, groups=tmp_kernel.size(0), padding=0, stride=1)
KeyboardInterrupt
